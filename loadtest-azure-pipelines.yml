# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Date:yyyyMMdd)-$(Rev:r)
# name modifies the Build.BuildNumber format used in tag
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/run-number?view=azure-devops&tabs=yaml

trigger:
- master

variables:

  dockerfilePath: '**/Dockerfile'
  #tag: '$(Build.BuildNumber)'
  tag: 20200717-1
  serviceName: loadtest

  #load test settings toggle upper right variables
   # clients: 5   num of users
   # hatchrate: 5 every sec how much user to spawn until reaches total
   # runtime: 2m  h m s format run time
   # enabled: true

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: microservicesdemo
      type: github
      name: northpoint/microservices-demo
      endpoint: github-svcconn

stages:
# - stage: DockerBuildPush
#   displayName: Docker Build & Push stage
#   jobs:  
#   - template: /pipeline-templates/docker-builddeploy-pipeline.yaml@microservicesdemo  # Template reference
#     parameters:
#       tag: $(tag)
#       acrRepo: $(serviceName)
#       dockerfilePath: $(dockerfilePath)
      
- stage: HelmDeploy
  displayName: Helm Deploy
  jobs:
  - template: /pipeline-templates/helm-deploy-pipeline.yaml@microservicesdemo
    parameters:
      serviceName: $(serviceName)
      image: $(serviceName):$(tag)
      arguments: --set loadtest.enabled=$(enabled),loadtest.clients=$(clients),loadtest.hatchrate=$(hatchrate),loadtest.runtime=$(runtime)